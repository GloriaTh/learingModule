<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5"/>
        <property name="hashIterations" value="1"/>
        <property name="storedCredentialsHexEncoded" value="true"/>
        <!--<property name="hashSalted" value="true"/>-->
    </bean>

    <bean id="userRealm" class="com.study.shiro.server.realm.UserRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>

    <!--<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager"/>-->
    <bean id="cacheManager" class="com.study.shiro.server.cache.RedisCacheManager"/>

    <!--<bean id="sessionDao" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO"></bean>-->
    <bean id="sessionDao" class="com.study.shiro.server.session.RedisSessionDao"></bean>

    <bean id="sessionManager" class="com.study.shiro.server.session.MySessionManager">
        <property name="sessionDAO" ref="sessionDao"/>
        <property name="sessionIdCookie.maxAge" value="180000"/>
    </bean>
    <!--<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">-->
    <!--<property name="sessionDAO" ref="sessionDao"/>-->
    <!--</bean>-->

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="rememberMeManager" ref="rememberMeManager"/>
    </bean>

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"></property>
        <property name="loginUrl" value="/login.html"/>
        <property name="successUrl" value="/index.html"/>
        <property name="unauthorizedUrl" value="/unauthorized.html"/>
        <property name="filters">
            <util:map>
                <entry key="role" value-ref="roleOrFilter"/>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
                <entry key="test" value-ref="testFilter"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                /index.html = anon
                /unauthorized.html = anon
                /login.html = anon
                /user/login.do = anon
                /user/file.do = anon
                /user/test.do = anon
                /user/* = user
                /test.html = anon,test
                /role.html = role[admin,user],test
                /logout = logout
            </value>
        </property>
    </bean>

    <bean id="roleOrFilter" class="com.study.shiro.server.filter.CustomRolesAuthorizationFilter"/>
    <bean id="testFilter" class="com.study.shiro.server.filter.TestFilter"/>

    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter"
          class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/login.jsp"/>
    </bean>


    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cookie.maxAge" value="18000"/>
    </bean>

    <!-- 生命周期处理 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 开启shiro的注解,需借助SpringAOP扫描使用Shiro注解的类,并在必要时进行安全逻辑验证 -->
    <bean id="annotationProxy" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>