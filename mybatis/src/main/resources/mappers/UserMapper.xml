<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.mybatis.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.study.common.pojo.User">
        <constructor>
            <idArg column="user_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="user_email" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_phone" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_password" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_pwd_salt" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="user_state" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <resultMap id="RoleResultMap" type="com.study.common.pojo.Role">
        <constructor>
            <idArg column="role_id" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="role_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="role_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="role_desc" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="role_create_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="role_last_modify_time" javaType="java.util.Date" jdbcType="TIMESTAMP"/>
            <arg column="role_valid" javaType="java.lang.Boolean" jdbcType="BIT"/>
        </constructor>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.study.common.pojo.User">
    insert into user (user_name, user_id, user_email, 
      user_phone, user_password, user_pwd_salt, 
      user_state)
    values (#{userName,jdbcType=VARCHAR}, #{userId,jdbcType=BIGINT}, #{userEmail,jdbcType=VARCHAR}, 
      #{userPhone,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, #{userPwdSalt,jdbcType=VARCHAR}, 
      #{userState,jdbcType=VARCHAR})
  </insert>
    <update id="updateByPrimaryKey" parameterType="com.study.common.pojo.User">
    update user
    set user_id = #{userId,jdbcType=BIGINT},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_pwd_salt = #{userPwdSalt,jdbcType=VARCHAR},
      user_state = #{userState,jdbcType=VARCHAR}
    where user_name = #{userName,jdbcType=VARCHAR}
  </update>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select user_name, user_id, user_email, user_phone, user_password, user_pwd_salt, 
    user_state
    from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select user_name, user_id, user_email, user_phone, user_password, user_pwd_salt, 
    user_state
    from user
    order by user_id ASC
  </select>
    <select id="selectPassByUserName" parameterType="java.lang.String"  resultType="string">
        SELECT
        user_password
        FROM
        USER
        WHERE user_name = #{userName,jdbcType=VARCHAR}
    </select>
    <select id="selectRoleByUserId" parameterType="java.lang.Long" resultMap="RoleResultMap">
        SELECT
        r.role_id, role_name, role_code, role_desc, role_create_time, role_last_modify_time,
        role_valid
        FROM
        role r
        INNER JOIN user_role ur ON r.role_id = ur.role_id WHERE user_id= #{userId,jdbcType=BIGINT}
        order by r.role_id ASC
    </select>
</mapper>