<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.study.mybatis.dao.RoleMapper">
  <resultMap id="BaseResultMap" type="com.study.common.pojo.Role">
    <constructor>
      <idArg column="role_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="role_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="role_create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="role_last_modify_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="role_valid" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <resultMap id="PermissionResultMap" type="com.study.common.pojo.Permission">
    <constructor>
      <idArg column="permission_id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="permission_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="permission_code" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="permission_desc" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="permission_navi" javaType="java.lang.Boolean" jdbcType="BIT" />
      <arg column="permission_url" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="permission_create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="permission_last_modify_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="permission_valid" javaType="java.lang.Byte" jdbcType="TINYINT" />
    </constructor>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.study.common.pojo.Role">
    insert into role (role_id, role_name, role_code, 
      role_desc, role_create_time, role_last_modify_time, 
      role_valid)
    values (#{roleId,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleCode,jdbcType=VARCHAR}, 
      #{roleDesc,jdbcType=VARCHAR}, #{roleCreateTime,jdbcType=TIMESTAMP}, #{roleLastModifyTime,jdbcType=TIMESTAMP}, 
      #{roleValid,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.study.common.pojo.Role">
    update role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_code = #{roleCode,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      role_create_time = #{roleCreateTime,jdbcType=TIMESTAMP},
      role_last_modify_time = #{roleLastModifyTime,jdbcType=TIMESTAMP},
      role_valid = #{roleValid,jdbcType=BIT}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select role_id, role_name, role_code, role_desc, role_create_time, role_last_modify_time, 
    role_valid
    from role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select role_id, role_name, role_code, role_desc, role_create_time, role_last_modify_time, 
    role_valid
    from role
    order by role_id ASC
  </select>
  <select id="selectPermissionById" parameterType="java.lang.Long" resultMap="PermissionResultMap">
    select p.permission_id, permission_name, permission_code, permission_desc, permission_navi,
    permission_url, permission_create_time, permission_last_modify_time, permission_valid
    FROM
	permission p
	INNER JOIN role_permission rp ON p.permission_id = rp.permission_id WHERE rp.role_id=#{roleId,jdbcType=BIGINT}
    order by p.permission_id ASC
  </select>
</mapper>